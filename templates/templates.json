[  
 {
    "type": 1,
    "title": "wago network-creation",    
    "logo": "https://github.com/Helmut-Saal/docker-templates/blob/main/icons/docker.png?raw=true",
    "description": "Container to init an network for TICK stack",
    "image": "docker",
	"network": "bridge",
	"command": "docker network create monitoring",
    "name": "wago-network-init",
	"restart_policy": "no",
    "platform": "linux",
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }     
    ] 	
  },
  {
    "type": 1,
    "title": "wago node-red-iot",
    "logo": "https://github.com/Helmut-Saal/docker-templates/blob/main/icons/nodered.png?raw=true",
    "description": "Container with Node-red-iot",
    "image": "wagoautomation/node-red-iot:latest",
    "restart_policy": "unless-stopped",
    "name": "wago-node-red-iot",
	"network": "host",
    "platform": "linux",
    "volumes": [
      {
        "bind": "node_red_user_data",
        "container": "/data"
      },
      {
        "bind": "node_red_user_datacgroup",
        "container": "/sys/fs/cgroup"
      },
	        {
        "bind": "/var/www/",
        "container": "/var/www/"
      }
    ]
  },
  ,
    {
    "type": 1,
    "title": "wago mqtt-broker",
    "logo": "https://github.com/Helmut-Saal/docker-templates/blob/main/icons/mqtt.png?raw=true",
    "description": "Container with MQTT Broker",
    "image": "eclipse-mosquitto",
    "restart_policy": "unless-stopped",
    "name": "wago-mqtt-broker",
	"network": "monitoring",
    "platform": "linux",
    "ports": [
      "1883:1883/tcp",
	  "9001:9001/tcp"
    ],
    "volumes": [
      {
        "bind": "mosquitto-volume",
        "container": "/mosquitto/data"
      },
      {
        "bind": "mosquitto-log",
        "container": "/mosquitto/log"
      }
    ]
  }
]


